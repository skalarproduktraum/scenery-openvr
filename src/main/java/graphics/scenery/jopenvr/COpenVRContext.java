package graphics.scenery.jopenvr;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class COpenVRContext extends Structure<COpenVRContext, COpenVRContext.ByValue, COpenVRContext.ByReference > {
	/** class vr::IVRSystem * */
	public IntByReference m_pVRSystem;
	/** class vr::IVRChaperone * */
	public IntByReference m_pVRChaperone;
	/** class vr::IVRChaperoneSetup * */
	public IntByReference m_pVRChaperoneSetup;
	/** class vr::IVRCompositor * */
	public IntByReference m_pVRCompositor;
	/** class vr::IVROverlay * */
	public IntByReference m_pVROverlay;
	/** class vr::IVRResources * */
	public IntByReference m_pVRResources;
	/** class vr::IVRRenderModels * */
	public IntByReference m_pVRRenderModels;
	/** class vr::IVRExtendedDisplay * */
	public IntByReference m_pVRExtendedDisplay;
	/** class vr::IVRSettings * */
	public IntByReference m_pVRSettings;
	/** class vr::IVRApplications * */
	public IntByReference m_pVRApplications;
	/** class vr::IVRTrackedCamera * */
	public IntByReference m_pVRTrackedCamera;
	/** class vr::IVRScreenshots * */
	public IntByReference m_pVRScreenshots;
	public COpenVRContext() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("m_pVRSystem", "m_pVRChaperone", "m_pVRChaperoneSetup", "m_pVRCompositor", "m_pVROverlay", "m_pVRResources", "m_pVRRenderModels", "m_pVRExtendedDisplay", "m_pVRSettings", "m_pVRApplications", "m_pVRTrackedCamera", "m_pVRScreenshots");
	}
	public COpenVRContext(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected COpenVRContext newInstance() { return new COpenVRContext(); }
	public static COpenVRContext[] newArray(int arrayLength) {
		return Structure.newArray(COpenVRContext.class, arrayLength);
	}
	public static class ByReference extends COpenVRContext implements Structure.ByReference {
		
	};
	public static class ByValue extends COpenVRContext implements Structure.ByValue {
		
	};
}
