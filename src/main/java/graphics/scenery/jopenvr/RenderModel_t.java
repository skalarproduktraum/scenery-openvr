package graphics.scenery.jopenvr;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.ShortByReference;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class RenderModel_t extends Structure<RenderModel_t, RenderModel_t.ByValue, RenderModel_t.ByReference > {
	/** const struct vr::RenderModel_Vertex_t * */
	public graphics.scenery.jopenvr.RenderModel_Vertex_t.ByReference rVertexData;
	public int unVertexCount;
	/** const uint16_t * */
	public ShortByReference rIndexData;
	public int unTriangleCount;
	public int diffuseTextureId;
	public RenderModel_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("rVertexData", "unVertexCount", "rIndexData", "unTriangleCount", "diffuseTextureId");
	}
	public RenderModel_t(graphics.scenery.jopenvr.RenderModel_Vertex_t.ByReference rVertexData, int unVertexCount, ShortByReference rIndexData, int unTriangleCount, int diffuseTextureId) {
		super();
		this.rVertexData = rVertexData;
		this.unVertexCount = unVertexCount;
		this.rIndexData = rIndexData;
		this.unTriangleCount = unTriangleCount;
		this.diffuseTextureId = diffuseTextureId;
	}
	public RenderModel_t(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected RenderModel_t newInstance() { return new RenderModel_t(); }
	public static RenderModel_t[] newArray(int arrayLength) {
		return Structure.newArray(RenderModel_t.class, arrayLength);
	}
	public static class ByReference extends RenderModel_t implements Structure.ByReference {
		
	};
	public static class ByValue extends RenderModel_t implements Structure.ByValue {
		
	};
}
