package graphics.scenery.jopenvr;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VREvent_Ipd_t extends Structure<VREvent_Ipd_t, VREvent_Ipd_t.ByValue, VREvent_Ipd_t.ByReference > {
	public float ipdMeters;
	public VREvent_Ipd_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ipdMeters");
	}
	public VREvent_Ipd_t(float ipdMeters) {
		super();
		this.ipdMeters = ipdMeters;
	}
	public VREvent_Ipd_t(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected VREvent_Ipd_t newInstance() { return new VREvent_Ipd_t(); }
	public static VREvent_Ipd_t[] newArray(int arrayLength) {
		return Structure.newArray(VREvent_Ipd_t.class, arrayLength);
	}
	public static class ByReference extends VREvent_Ipd_t implements Structure.ByReference {
		
	};
	public static class ByValue extends VREvent_Ipd_t implements Structure.ByValue {
		
	};
}
