package graphics.scenery.jopenvr;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import graphics.scenery.jopenvr.JOpenVRLibrary.VkDevice_T;
import graphics.scenery.jopenvr.JOpenVRLibrary.VkInstance_T;
import graphics.scenery.jopenvr.JOpenVRLibrary.VkPhysicalDevice_T;
import graphics.scenery.jopenvr.JOpenVRLibrary.VkQueue_T;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VRVulkanTextureData_t extends Structure<VRVulkanTextureData_t, VRVulkanTextureData_t.ByValue, VRVulkanTextureData_t.ByReference > {
	public long m_nImage;
	/** struct VkDevice_T * */
	public VkDevice_T m_pDevice;
	/** struct VkPhysicalDevice_T * */
	public VkPhysicalDevice_T m_pPhysicalDevice;
	/** struct VkInstance_T * */
	public VkInstance_T m_pInstance;
	/** struct VkQueue_T * */
	public VkQueue_T m_pQueue;
	public int m_nQueueFamilyIndex;
	public int m_nWidth;
	public int m_nHeight;
	public int m_nFormat;
	public int m_nSampleCount;
	public VRVulkanTextureData_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("m_nImage", "m_pDevice", "m_pPhysicalDevice", "m_pInstance", "m_pQueue", "m_nQueueFamilyIndex", "m_nWidth", "m_nHeight", "m_nFormat", "m_nSampleCount");
	}
	public VRVulkanTextureData_t(Pointer peer) {
		super(peer);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected VRVulkanTextureData_t newInstance() { return new VRVulkanTextureData_t(); }
	public static VRVulkanTextureData_t[] newArray(int arrayLength) {
		return Structure.newArray(VRVulkanTextureData_t.class, arrayLength);
	}
	public static class ByReference extends VRVulkanTextureData_t implements Structure.ByReference {
		
	};
	public static class ByValue extends VRVulkanTextureData_t implements Structure.ByValue {
		
	};
}
